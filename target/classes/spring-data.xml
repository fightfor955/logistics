<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	<!-- 1.配置注解包扫描位置 -->
	<context:component-scan base-package="cn.zbw.logistics"/>
	
	<!-- 2.读取db.properties配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 3.配置druid 连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
	</bean>
	
	
	<!-- 4.配置SqlsessionFacotory -->
	<bean id="sqlSessionFacotry" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 1.配置数据源 -->
		<property name="dataSource" ref="dataSource"/>
		
		<!-- 2.配置扫描别名位置-->
		<property name="typeAliasesPackage" value="cn.zbw.logistics.pojo"/>
		
		<!-- 3.配置映射文件位置 -->
		<!-- <property name="mapperLocations">
			<array>
				<value>classpath:cn/zj/logistics/mapper/*Mapper.xml</value>
			</array>
		</property> -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							<!-- 方言 -->
							helperDialect=mysql
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	
	
	<!-- 5.创建Mapper映射接口的代理对象（使用包扫描创建） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 1.配置Mapper映射接口包位置 -->
		<property name="basePackage" value="cn.zbw.logistics.mapper"/>
		
		<!-- 2.配置工厂名称 [可选] -->
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFacotry"/> -->
	
	</bean>
	
	<!-- 
		事务配置 
		
		1，配置事务管理器
		
		2，配置事务通知/增强
		
		3，使用AOP将事务切入到service层
	 -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- DQL  -->	
			<tx:method name="select*" isolation="REPEATABLE_READ" propagation="REQUIRED" timeout="3" read-only="true"/>
			<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" timeout="3" read-only="true"/>
			<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" timeout="3" read-only="true"/>
			<tx:method name="query*" isolation="REPEATABLE_READ" propagation="REQUIRED" timeout="3" read-only="true"/>
			<!-- DML -->
			<tx:method name="*" isolation="REPEATABLE_READ" propagation="REQUIRED" timeout="3" read-only="false"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.zbw.logistics.service..*.*(..))"/>
	</aop:config>
	
	<!-- 导入其他配置 -->
	<!-- <import resource="classpath:logistics.xml"/> -->

</beans>
